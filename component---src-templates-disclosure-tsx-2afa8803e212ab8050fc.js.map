{"version":3,"sources":["webpack:///./src/utils.ts","webpack:///./src/templates/disclosure.tsx"],"names":["stringifyDate","dateString","split","y","m","d","parseInt","Disclosure","disclosure","data","allWadaDbDisclosureTsv","nodes","result","explanation","result_article_url","Typography","variant","component","href","target","rel","reason_of_no_disclosure","result_img_url","src","style","width","maxWidth","Layout","title","disclosure_description","description","Box","my","Link","to","disclosure_actor","disclosure_target","submission_date","result_date","query"],"mappings":"2PAAaA,G,UAAgB,SAACC,GAAuB,MACjCA,EAAWC,MAAM,KAA5BC,EAD4C,KACzCC,EADyC,KACtCC,EADsC,KAEnD,OAAUC,SAASH,GAAnB,IAAyBG,SAASF,GAAlC,IAAwCE,SAASD,GAAjD,MCMa,SAASE,EAAT,GAA4B,IACnCC,EADmC,EAAPC,KACVC,uBAAuBC,MAAM,GAEjDC,EAAS,KACb,OAAOJ,EAAWI,QAChB,IAAK,MACH,IAAIC,EAAc,MACfL,EAAWM,oBAAsBN,EAAWK,eAC7CA,EAAc,oCACZ,kBAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAnC,MAGA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,SACnBR,EAAWK,aAAe,2BAAIL,EAAWK,aACzCL,EAAWM,oBAAsB,2BAAG,uBAAGI,KAAMV,EAAWM,mBAAoBK,OAAO,SAASC,IAAI,uBAA5D,WAIzCR,EAAS,oCACP,kBAACG,EAAA,EAAD,CAAYC,QAAQ,SACG,QAAtBR,EAAWI,OAAmB,2BAAIJ,EAAWa,yBAA+B,GAC5Eb,EAAWc,gBAAkB,2BAAG,yBAAKC,IAAKf,EAAWc,eAAgBE,MAAO,CAACC,MAAO,OAAQC,SAAU,aAEtGb,GAGP,OAAO,kBAACc,EAAA,EAAD,CAAQC,MAAK,gBAAkBpB,EAAWqB,uBAClCC,YAAW,SAAWtB,EAAWqB,wBAC9C,kBAACE,EAAA,EAAD,CAAKC,GAAI,GACT,kBAACjB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAnC,SACST,EAAWqB,wBAEpB,kBAACd,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAnC,UAGA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,SAClB,4BACE,sCAAW,kBAACiB,EAAA,EAAD,CAAMC,GAAE,WAAa1B,EAAW2B,kBAAqB3B,EAAW2B,mBAC3E,uCAAY,kBAACF,EAAA,EAAD,CAAMC,GAAE,YAAc1B,EAAW4B,mBAAsB5B,EAAW4B,oBAC7E5B,EAAW6B,iBAAmB,uCAAarC,EAAcQ,EAAW6B,kBACpE7B,EAAW8B,aAAe,yCAAetC,EAAcQ,EAAW8B,gBAIvE,kBAACvB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAnC,OACOT,EAAWI,QAEjBA,IAKE,IAAM2B,EAAQ","file":"component---src-templates-disclosure-tsx-2afa8803e212ab8050fc.js","sourcesContent":["export const stringifyDate = (dateString: string) => {\n  const [y, m, d] = dateString.split(\"-\");\n  return `${parseInt(y)}年${parseInt(m)}月${parseInt(d)}日`;\n}\n","import React from \"react\";\nimport { graphql} from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport { Typography } from \"@material-ui/core\"\nimport Link from \"../components/Link\"\nimport Box from \"@material-ui/core/Box\"\nimport { stringifyDate } from \"../utils\"\n\nexport default function Disclosure({data}) {\n  const disclosure = data.allWadaDbDisclosureTsv.nodes[0];\n\n  let result = null;\n  switch(disclosure.result) {\n    case \"不開示\":\n      let explanation = null;\n      if(disclosure.result_article_url || disclosure.explanation) {\n        explanation = <>\n          <Typography variant=\"h6\" component=\"h2\">\n            解説\n          </Typography>\n          <Typography variant=\"body1\">\n          {disclosure.explanation && <p>{disclosure.explanation}</p>}\n          {disclosure.result_article_url && <p><a href={disclosure.result_article_url} target=\"_blank\" rel=\"noreferrer noopener\">元記事</a></p>}\n          </Typography>\n          </>\n      }\n      result = <>\n        <Typography variant=\"body1\">\n        {disclosure.result === \"不開示\" ? <p>{disclosure.reason_of_no_disclosure}</p> : \"\"}\n        {disclosure.result_img_url && <p><img src={disclosure.result_img_url} style={{width: \"100%\", maxWidth: \"800px\"}} /></p>}\n        </Typography>\n        {explanation}\n      </>;\n  }\n  return <Layout title={`WadaDB 開示請求: ${disclosure.disclosure_description}`}\n                 description={`開示請求: ${disclosure.disclosure_description}`}>\n    <Box my={2}>\n    <Typography variant=\"h5\" component=\"h1\">\n      開示請求: {disclosure.disclosure_description}\n    </Typography>\n    <Typography variant=\"h6\" component=\"h2\">\n      開示請求詳細\n    </Typography>\n    <Typography variant=\"body1\">\n      <ul>\n        <li>開示請求人: <Link to={`/actors/${disclosure.disclosure_actor}`}>{disclosure.disclosure_actor}</Link></li>\n        <li>主な請求対象: <Link to={`/targets/${disclosure.disclosure_target}`}>{disclosure.disclosure_target}</Link></li>\n        {disclosure.submission_date && <li>開示請求日時: {stringifyDate(disclosure.submission_date)}</li>}\n        {disclosure.result_date && <li>開示・不開示日時: {stringifyDate(disclosure.result_date)}</li>}\n      </ul>\n    </Typography>\n\n    <Typography variant=\"h6\" component=\"h2\">\n      結果: {disclosure.result}\n    </Typography>\n    {result}\n    </Box>\n  </Layout>\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n  allWadaDbDisclosureTsv(filter: {disclosure_description: {ne: \"\"}, fields: {slug: {eq: $slug}}}) {\n    nodes {\n      disclosure_actor\n      disclosure_description\n      disclosure_target\n      submission_date\n      submission_article_url\n      explanation\n      id\n      result_date\n      result\n      reason_of_no_disclosure\n      result_article_url\n      result_img_url\n    }\n  }\n}\n`;\n"],"sourceRoot":""}