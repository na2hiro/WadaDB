{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["Home","data","title","my","variant","component","latest","nodes","map","item","to","id","disclosure_description","targets","group","sort","t1","t2","totalCount","target","i","encodeURIComponent","disclosure_target","actors","a1","a2","actor","disclosure_actor","query"],"mappings":"mQAOe,SAASA,EAAT,GAAwB,IAARC,EAAQ,EAARA,KAC7B,OAAO,kBAAC,IAAD,CAAQC,MAAO,sBACpB,kBAAC,IAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAnC,sBAGA,sFAGA,kBAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,MAAnC,SAGA,4BACGJ,EAAKK,OAAOC,MAAMC,KAAI,SAAAC,GAAI,OACzB,4BAAI,kBAAC,IAAD,CAAMC,GAAE,gBAAkBD,EAAKE,IAAOF,EAAKG,6BAGnD,kBAAC,IAAD,CAAYR,QAAQ,KAAKC,UAAU,MAAnC,YAGA,4BAEGJ,EAAKY,QAAQC,MAAMC,MAAK,SAACC,EAAGC,GAAJ,OAASA,EAAGC,WAAWF,EAAGE,cAAYV,KAAI,SAACW,EAAQC,GAAT,OACjE,4BAAI,kBAAC,IAAD,CAAMV,GAAE,YAAcW,mBAAmBF,EAAOZ,MAAM,GAAGe,oBAAuBH,EAAOZ,MAAM,GAAGe,mBAApG,KAAgIH,EAAOD,WAAvI,SAIJ,kBAAC,IAAD,CAAYd,QAAQ,KAAKC,UAAU,MAAnC,WAGA,4BACGJ,EAAKsB,OAAOT,MAAMC,MAAK,SAACS,EAAGC,GAAJ,OAASA,EAAGP,WAAWM,EAAGN,cAAYV,KAAI,SAACkB,EAAON,GAAR,OAChE,4BAAI,kBAAC,IAAD,CACFV,GAAE,WAAaW,mBAAmBK,EAAMnB,MAAM,GAAGoB,mBAAsBD,EAAMnB,MAAM,GAAGoB,kBADxF,KACmHD,EAAMR,WADzH,WASH,IAAMU,EAAQ","file":"component---src-pages-index-tsx-98399007b8517255cf7f.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Link from \"../components/Link\"\nimport { Typography } from \"@material-ui/core\"\nimport Box from \"@material-ui/core/Box\"\n\nexport default function Home({ data }) {\n  return <Layout title={\"WadaDB: 情報開示データベース\"}>\n    <Box my={2}>\n      <Typography variant=\"h5\" component=\"h1\">\n        WadaDB: 情報開示データベース\n      </Typography>\n      <p>\n        WadaDBは、行政文書の情報開示請求により得られた知見を蓄積するデータベースを目指す有志のプロジェクトです。\n      </p>\n      <Typography variant=\"h6\" component=\"h2\">\n        最新の開示\n      </Typography>\n      <ul>\n        {data.latest.nodes.map(item => (\n          <li><Link to={`/disclosures/${item.id}`}>{item.disclosure_description}</Link></li>\n        ))}\n      </ul>\n      <Typography variant=\"h6\" component=\"h2\">\n        被開示請求者一覧\n      </Typography>\n      <ul>\n        {/* TODO sort in GraphQL */}\n        {data.targets.group.sort((t1,t2)=>t2.totalCount-t1.totalCount).map((target, i) => (\n          <li><Link to={`/targets/${encodeURIComponent(target.nodes[0].disclosure_target)}`}>{target.nodes[0].disclosure_target}</Link> ({target.totalCount})\n          </li>\n        ))}\n      </ul>\n      <Typography variant=\"h6\" component=\"h2\">\n        開示請求者一覧\n      </Typography>\n      <ul>\n        {data.actors.group.sort((a1,a2)=>a2.totalCount-a1.totalCount).map((actor, i) => (\n          <li><Link\n            to={`/actors/${encodeURIComponent(actor.nodes[0].disclosure_actor)}`}>{actor.nodes[0].disclosure_actor}</Link> ({actor.totalCount})\n          </li>\n        ))}\n      </ul>\n    </Box>\n  </Layout>\n};\n\nexport const query = graphql`\nquery MyQuery {\n  latest: allWadaDbDisclosureTsv(filter: {disclosure_description: {ne: \"\"}}, sort: {fields: last_modified_date, order: DESC}) {\n    nodes {\n      id\n      disclosure_description\n    }\n  }\n  targets: allWadaDbDisclosureTsv(filter: {disclosure_description: {ne: \"\"}}) {\n    group(field: disclosure_target, limit: 1) {\n      totalCount\n      nodes {\n        disclosure_target\n      }\n    }\n  }\n  actors: allWadaDbDisclosureTsv(filter: {disclosure_description: {ne: \"\"}}) {\n    group(field: disclosure_actor, limit: 1) {\n      totalCount\n      nodes {\n        disclosure_actor\n      }\n    }\n  }\n}\n`\n"],"sourceRoot":""}